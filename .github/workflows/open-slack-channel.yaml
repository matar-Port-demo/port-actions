name: Open Slack Channel

on:
  workflow_dispatch:
    inputs:
      port_payload:
        description: "Port's payload, including details for who triggered the action and general context (blueprint, run ID, etc...)."
        required: true

permissions:
  contents: read
  issues: write 

jobs:
  open-slack-channel:
    runs-on: ubuntu-latest
    env:
      PD_INCIDENT_ID: ${{ fromJson(inputs.port_payload).event.diff.after.identifier }}
      PD_INCIDENT_URL: ${{ fromJson(inputs.port_payload).event.diff.after.properties.url }}
      PD_INCIDENT_TITLE: ${{ fromJson(inputs.port_payload).event.diff.after.title }}
      PORT_INCIDENT_URL: https://app.getport.io/pagerdutyIncidentEntity?identifier=${{ fromJson(inputs.port_payload).event.diff.after.identifier }}


    steps:
      - uses: actions/checkout@v4

      - name: Log Github Issue Creation
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(github.event.inputs.port_payload).run.id }}
          logMessage: "Creating a new Github issue for Pagerduty incident '${{ env.PD_INCIDENT_ID }}'..."

      - uses: JasonEtco/create-an-issue@v2
        id: create-github-issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log Executing Request to Open Channel
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(github.event.inputs.port_payload).run.id }}
          logMessage: | 
            Github issue created successfully - ${{ steps.create-github-issue.outputs.url }}
            Creating a new Slack channel for this incident...

      - name: Create Slack Channel
        id: create-slack-channel
        env:
          CHANNEL_NAME: incident-${{ env.PD_INCIDENT_ID }}
          SLACK_TOKEN: ${{ secrets.BOT_USER_OAUTH_TOKEN }}
        run: |
          channel_name=$(echo "${{env.CHANNEL_NAME}}" | tr '[:upper:]' '[:lower:]')
          response=$(curl -s -X POST "https://slack.com/api/conversations.create" \
            -H "Authorization: Bearer ${SLACK_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"$channel_name\"}")
        
          # Check if the channel was created successfully
          ok=$(echo $response | jq -r '.ok')
          
          if [ "$ok" == "true" ]; then
            echo "Channel '$channel_name' created successfully."
            channel_id=$(echo $response | jq -r '.channel.id')
            echo "SLACK_CHANNEL_ID=$channel_id" >> $GITHUB_OUTPUT
          else
            error=$(echo $response | jq -r '.error')
            echo "Error creating channel: $error"
            echo "SLACK_ERROR=$error" >> $GITHUB_OUTPUT
            exit 1
          fi
          
      - name: Log failed Slack channel creation
        if: failure()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(github.event.inputs.port_payload).run.id }}
          logMessage: "Failed to create slack channel: ${{ steps.create-slack-channel.outputs.SLACK_ERROR }} ❌"

      - name: Log successful Slack channel creation
        if: success()
        uses: port-labs/port-github-action@v1
        env:
          SLACK_CHANNEL_URL: https://slack.com/app_redirect?channel=${{ steps.create-slack-channel.outputs.SLACK_CHANNEL_ID }}
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(github.event.inputs.port_payload).run.id }}
          logMessage: |
            Channel created successfully - ${{ env.SLACK_CHANNEL_URL }} ✅
            Adding relevant users to the slack channel...

      - name: Add Members to Slack Channel
        id: add_members
        if: success()
        env:
          SLACK_TOKEN: ${{ secrets.BOT_USER_OAUTH_TOKEN }}
          CHANNEL_ID: ${{ steps.create-slack-channel.outputs.SLACK_CHANNEL_ID }}
          CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
          CHANNEL_NAME: incident-${{ env.PD_INCIDENT_ID }}
          RUN_ID: ${{ fromJson(github.event.inputs.port_payload).run.id }}
          # MEMBER_EMAILS: "('matar@getport.io', 'zohar@getport.io', 'bogu@getport.io', 'matanheled@getport.io')"
        run: |
          # members=('matar@getport.io' 'zohar@getport.io' 'bogu@getport.io' 'matanheled@getport.io')
          members=('matar@getport.io' 'matanheled@getport.io')
          for member in "${members[@]}"; do
            user_response=$(curl -s -X GET "https://slack.com/api/users.lookupByEmail?email=$member" \
              -H "Authorization: Bearer $SLACK_TOKEN")

            if [[ "$(echo $user_response | jq -r '.ok')" == "true" ]]; then
              user_id=$(echo $user_response | jq -r '.user.id')
            else
              error_message="Failed to retrieve user id for $email: $(echo $user_response | jq -r '.error' | tr '_' ' ') ⚠️"
              echo $error_message
              exit 1
            fi

            add_user_response=$(curl -s -X POST "https://slack.com/api/conversations.invite" \
                -H "Authorization: Bearer $SLACK_TOKEN" \
                -H "Content-Type: application/json" \
                -d "{\"channel\":\"$CHANNEL_ID\", \"users\":\"$user_id\"}")
            
            user_ok=$(echo $add_user_response | jq -r '.ok')
            if [ "$user_ok" == "true" ]; then
                echo "User '$user_id' added to channel '$CHANNEL_NAME'."
            else
                user_error=$(echo $add_user_response | jq -r '.error')
                echo "Error adding user '$user_id' to channel: $user_error"
                exit 1
            fi
          done

      - name: Get incident's related service
        id: get-incidient-service
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: SEARCH
          query: |
            {
              "rules": [
                {
                    "operator": "=",
                    "property": "$blueprint",
                    "value": "service"
                },
                {
                    "operator": "relatedTo",
                    "blueprint": "pagerdutyService",
                    "value": "${{ fromJson(inputs.port_payload).event.diff.after.relations.pagerdutyService }}"
                }
              ],
              "combinator": "and"
            }
      
      - name: Extract realted service
        id: get-service-info
        run: |
          echo '${{ steps.get-incidient-service.outputs.entities }}' | jq -r '.[0].identifier'
          echo "SERVICE_IDENTIFIER=$(echo '${{ steps.get-incidient-service.outputs.entities }}' | jq -r '.[0].identifier')" >> $GITHUB_OUTPUT
          echo '${{ steps.get-incidient-service.outputs.entities }}' | jq -r '.[0].title'
          echo "SERVICE_TITLE=$(echo '${{ steps.get-incidient-service.outputs.entities }}' | jq -r '.[0].title')" >> $GITHUB_OUTPUT
          service_deps=$(echo '${{ steps.get-incidient-service.outputs.entities }}' | jq -r '.[0].relations.dependencies | map("<https://app.getport.io/serviceEntity?identifier=\(.)|\(.)>") | join(", ")')
          echo "DEPS_WITH_HYPERLINK=$service_deps" >> $GITHUB_OUTPUT

      - name: Send Slack Message
        uses: archive/github-actions-slack@v2.9.0
        env:
          SVC_ENTITY_URL: https://app.getport.io/serviceEntity?identifier=${{ steps.get-service-info.outputs.SERVICE_IDENTIFIER }}
          SVC_ENTITY_TITLE: ${{ steps.get-service-info.outputs.SERVICE_TITLE }}
        id: send-message
        with:
          slack-function: send-message
          slack-bot-user-oauth-access-token: ${{ secrets.BOT_USER_OAUTH_TOKEN }}
          slack-channel: ${{ steps.create-slack-channel.outputs.SLACK_CHANNEL_ID }}
          slack-text: | 
            :rotating_light: New Incident reported - ${{ env.PD_INCIDENT_TITLE }} :rotating_light:
              Urgency: `${{ fromJson(inputs.port_payload).event.diff.after.properties.urgency }}`
              Service: <${{ env.SVC_ENTITY_URL }}|${{ env.SVC_ENTITY_TITLE }}>
              Manage incident :point_right::skin-tone-4: <${{ env.PORT_INCIDENT_URL }}|here>!
            
              Note that there are services which might be affected: ${{ steps.get-service-info.outputs.DEPS_WITH_HYPERLINK }}
              Service owners were added to this channel.

              Please use this Slack channel to report any updates, ideas, or root-cause ideas related to this incident :thread:

      - name: Add Slack channel to Pagerduty incident
        uses: port-labs/port-github-action@v1
        env:
          SLACK_CHANNEL_URL: https://slack.com/app_redirect?channel=${{ steps.create-slack-channel.outputs.SLACK_CHANNEL_ID }}
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          identifier: ${{ env.PD_INCIDENT_ID }}
          blueprint: pagerdutyIncident
          properties: |
            {
              "slack_channel": "${{ env.SLACK_CHANNEL_URL }}",
              "github_issue": "${{ steps.create-github-issue.outputs.url }}"
            }
          relations: | 
            {
              "service": "${{ steps.get-service-info.outputs.SERVICE_IDENTIFIER }}"
            }

      - name: Log Successful Action
        if: success()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(github.event.inputs.port_payload).run.id }}
          logMessage: |
            Added relevant users to the Slack channel ✅
            Done handling the new incident 💪🏻
